name: Release on Beta Version Bump

on:
  push:
    branches: [ beta ]
    paths:
      - "module.json"

permissions:
  contents: write

jobs:
  beta-release:
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read module.json fields
        id: read
        run: |
          VERSION=$(jq -r '.version' module.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions@github.com"

      # Update download URL in module.json to include the beta tag and filename
      - name: Update download URL
        id: update
        run: |
          VERSION="${{ steps.read.outputs.version }}"
          NEW_URL="https://github.com/${{ github.repository }}/releases/download/v${VERSION}-beta/Runes-and-Remnants-v${VERSION}-beta.zip"
          jq --arg url "$NEW_URL" '.download = $url' module.json > tmp.json && mv tmp.json module.json
          echo "Updated download URL: $NEW_URL"

      - name: Commit updated module.json
        run: |
          git add module.json
          git commit -m "chore: update beta download URL for v${{ steps.read.outputs.version }}" || echo "No changes to commit"

      - name: Determine tag
        id: tagcheck
        run: |
          TAG="v${{ steps.read.outputs.version }}-beta"
          git fetch --tags
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Tag $TAG already exists; skipping."
          else
            echo "should_release=true" >> $GITHUB_OUTPUT
            echo "tag=$TAG" >> $GITHUB_OUTPUT
          fi

      - name: Stop if no new version
        if: steps.tagcheck.outputs.should_release == 'false'
        run: echo "No new release needed."

      - name: Create beta tag
        if: steps.tagcheck.outputs.should_release == 'true'
        run: |
          TAG="${{ steps.tagcheck.outputs.tag }}"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"

      - name: Build module zip
        id: build
        if: steps.tagcheck.outputs.should_release == 'true'
        run: |
          NAME="Runes-and-Remnants-v${{ steps.read.outputs.version }}-beta.zip"
          zip -r "$NAME" . \
            -x ".git/*" ".github/*" "node_modules/*" "tests/*" "scripts/*" \
               "*.psd" "*.ai" "*.blend" ".DS_Store" "README*.md"
          echo "zip_name=$NAME" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: steps.tagcheck.outputs.should_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.read.outputs.version }}-beta
          name: "Runes & Remnants v${{ steps.read.outputs.version }}-beta"
          body: |
            🚧 **Beta Release** for testing purposes.
            This build includes the latest experimental features and fixes.

            - 🔖 Tagged as: v${{ steps.read.outputs.version }}-beta
            - 📦 File: Runes-and-Remnants-v${{ steps.read.outputs.version }}-beta.zip
            - 🧩 Use for internal testing only.
          generate_release_notes: true
          files: |
            ${{ steps.build.outputs.zip_name }}
            module.json
